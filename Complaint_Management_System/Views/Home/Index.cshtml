
@{ ViewData["Title"] = "Home"; }

<link href="~/css/HomePage.css" rel="stylesheet" />
<link href="~/css/Anncouncments.css" rel="stylesheet" />

<div class="text-center">
    @*<h1 class="display-4">Welcome</h1>
        <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>*@

</div>





<div id="ballMenuContainer">
    <div id="menuBall1" class="menuBall">
        <a href="Pages/New_Complaint.cshtml" class="ball blueball">
            <div class="menuText">
                New Complaint
            </div>
        </a>
    </div>

    <div id="menuBall2" class="menuBall">
        <a href="#" class="ball redball">
            <div class="menuText">
                History of Complaints
            </div>
        </a>
    </div>

    <div id="menuBall3" class="menuBall">
        <a href="#" class="ball greenball">
            <div class="menuText">
                View Documents
            </div>
        </a>
    </div>

</div>


@*News Feed*@


    <div class="wrapper">
        <p>
            This demonstrates how a border gradient
            can be applied to a single element using
            multiple backgrounds and specifying the
            background origin of each of those
            backgrounds.
        </p>
    </div>

    <div class="wrapper wrapper--rounded">
        <p>
            It gets a little weird when you want to
            round the corners off. A pseudo element
            can be used to establish a clean rounded
            corner on the inside.
        </p>
        <p>
            You will need to tweak the dimmensions
            of the position, border, and radius to
            get things just right.
        </p>
    </div>
